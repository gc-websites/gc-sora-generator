import puppeteer from 'puppeteer-extra'
import StealthPlugin from 'puppeteer-extra-plugin-stealth'
import fs from 'fs/promises'

const COOKIES_PATH = './cookies.json'
const SORA_URL = 'https://sora.chatgpt.com'

puppeteer.use(StealthPlugin())

async function loginAndSaveCookies() {
	const browser = await puppeteer.launch({
		headless: false,
		args: ['--no-sandbox', '--disable-setuid-sandbox'],
	})

	const page = await browser.newPage()

	// –°–ø—Ä–æ–±–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ –∫—É–∫—ñ
	try {
		const cookiesString = await fs.readFile(COOKIES_PATH, 'utf-8')
		const cookies = JSON.parse(cookiesString)
		await page.setCookie(...cookies)
		console.log('‚úÖ Cookies –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –∑ —Ñ–∞–π–ª—É')
	} catch {
		console.log('üîê Cookies –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ ‚Äî –ø–æ—Ç—Ä—ñ–±–µ–Ω —Ä—É—á–Ω–∏–π –ª–æ–≥—ñ–Ω')
	}

	// –í—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ Sora
	await page.goto(SORA_URL, { waitUntil: 'networkidle2' })
	console.log('üîÉ –û—á—ñ–∫—É—î–º–æ –ª–æ–≥—ñ–Ω –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞...')

	// –ß–µ–∫–∞—î–º–æ –ø–æ—è–≤—É —Å–µ—Å—ñ–π–Ω–æ—ó –∫—É–∫–∏
	let rawCookies = []
	const timeout = Date.now() + 5 * 60 * 1000

	while (Date.now() < timeout) {
		const pages = await browser.pages()
		for (const p of pages) {
			const client = await p.target().createCDPSession()
			const { cookies } = await client.send('Network.getAllCookies')

			const hasSession = cookies.some(
				c =>
					c.name === '__Secure-next-auth.session-token' ||
					c.name === 'next-auth.session-token'
			)

			if (hasSession) {
				rawCookies = cookies
				console.log(`üîë –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ–π–Ω–∞ –∫—É–∫–∞ –≤–∏—è–≤–ª–µ–Ω–∞ —É –≤–∫–ª–∞–¥—Ü—ñ: ${p.url()}`)
				break
			}
		}
		if (rawCookies.length) break
		await new Promise(r => setTimeout(r, 1000))
	}

	if (!rawCookies.length) {
		console.error('‚ùå –ù–µ –≤–∏—è–≤–ª–µ–Ω–æ –∫—É–∫—É –ª–æ–≥—ñ–Ω—É. –ô–º–æ–≤—ñ—Ä–Ω–æ, –ª–æ–≥—ñ–Ω –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ.')
		return
	}

	// üîß –§—ñ–ª—å—Ç—Ä—É—î–º–æ –ø–æ–ª—è –¥–ª—è —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ –∑ setCookie
	const safeCookies = rawCookies.map(c => ({
		name: c.name,
		value: c.value,
		domain: c.domain,
		path: c.path || '/',
		expires: c.expires || -1,
		httpOnly: c.httpOnly || false,
		secure: c.secure || false,
		sameSite: c.sameSite || 'Lax',
	}))

	// üíæ –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –∫—É–∫—ñ —É –±–µ–∑–ø–µ—á–Ω–æ–º—É —Ñ–æ—Ä–º–∞—Ç—ñ
	await fs.writeFile(COOKIES_PATH, JSON.stringify(safeCookies, null, 2))
	console.log(`‚úÖ –ó–±–µ—Ä–µ–∂–µ–Ω–æ ${safeCookies.length} –∫—É–∫—ñ –ø—ñ—Å–ª—è –ª–æ–≥—ñ–Ω—É`)
}

loginAndSaveCookies()
